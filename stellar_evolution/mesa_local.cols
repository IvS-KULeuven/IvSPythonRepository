! profile_columns.list -- determines the contents of star model profiles
! you can use a non-standard version by setting profile_columns_file in your inlist
!
! units are cgs unless otherwise noted.
!
! reorder the following names as desired to reorder columns.
! comment out the name to omit a column (fewer columns => less IO => faster running).
! remove '!' to restore a column.
!
! if you have a situation where you want a non-standard set of columns,
! make a copy of this file, edit as desired, and give the new filename in your inlist
! as profile_columns_file.   if you are just adding columns, you can 'include' this file,
! and just list the additions in your file.   note: to include the standard default
! version, use include '' -- the 0 length string means include the default file.
!
! the first few lines of the profile contain general info about the model.
! for completeness, those items are described at the end of this file.
!
! the following lines of the profile contain info for 1 zone per row, surface to center.  
!  mesa             !   mesa             !unit        !description
   zone             !   zone             !            !  numbers start with 1 at the surface
   temperature      !   logT             ![K]         !  log10(temperature) at center of zone
   temperature      !   log_Teff         ![K]         !  log10(temperature) at center of zone
   temperature      !   temperature      !K           !  temperature at center of zone
   Rho              !   logRho           ![g/cm3]     ! log10(density) at center of zone
   Rho              !   Rho              !g/cm3       ! density at center of zone
   pressure         !   logP             ![ba]        ! log10(pressure) at center of zone
   mass             !   mass             !Msol        !  mass coordinate of outer boundary of cell.
   radius           !   logR             ![Rsol]      !  log10(radius/Rsun) at outer boundary of zone
   radius           !   log_R            ![Rsol]      !  log10(radius/Rsun) at outer boundary of zone
   radius           !   radius           !Rsol        !  radius at outer boundary of zone (in Rsun units)
   g                !   log_g            ![cm/s2]     !  log10(g) gravity 
   luminosity       !   luminosity       !Lsol        !  luminosity at outer boundary of zone (in Lsun units)
   luminosity       !   logL             ![Lsol]      !  log(max(1d-6,L/Lsun))
   luminosity       !   log_L            ![Lsol]      !  log(max(1d-6,L/Lsun))
   age              !   star_age         !yr          ! stellar age
   velocity         !   velocity         !cm/s        ! velocity at outer boundary of zone -- 0 if no velocity variable
   entropy          !   entropy          !            ! specific entropy divided by (avo*kerg)
   mixing_type      !   mixing_type      !            ! mixing types are defined in mesa/const
   csound           !   csound           !cm/s        ! sound speed
   v_div_csound     !   v_div_csound     !            ! velocity divided by sound speed
   binding_energy   !   binding_energy   !erg/g       !  v^2/2 - G m / r + E + P/rho (ergs/gm).  negative if bound.
   v_div_r          !   v_div_r          !s-1         ! velocity divided by radius
   scale_height     !   scale_height     !Rsol        ! pressure scale height; P / (g rho)   (in Rsun units)
   eta              !   eta              !            ! electron degeneracy parameter (eta >> 1 for significant degeneracy)
   mu               !   mu               !amu         ! mean molecular weight per gas particle (ions + free electrons)
   logdq            !   logdq            !            ! log10(dq)
   dq_ratio         !   dq_ratio         !            ! dq(k-1)/dq(k)
   q                !   q                !            ! fraction of star mass interior to outer boundary of this zone
   tau              !   tau              !            !  optical depth
   logtau           !   logtau           !            !  log10(optical depth) at center of zone
   pressure         !   pressure         !ba          !  total pressure at center of zone (pgas + prad)
   pgas             !   pgas             !ba          !  gas pressure at center of zone (electrons and ions)
   pgas_div_ptotal  !   pgas_div_ptotal  !            !  pgas/pressure
   Pgas             !   logPgas          ![ba]        !  log10(pgas)
   Prad             !   prad             !ba          !  radiation pressure at center of zone
   energy           !   energy           !erg/g       !  internal energy (ergs/g)
   logE             !   logE             !            !  log10(specific internal energy) at center of zone
   grada            !   grada            !            !  dlnT_dlnP at constant S
   dE_dRho          !   dE_dRho          !            !  at constant T
   cv               !   cv               !erg/s/g/K   !  specific heat at constant volume
   cp               !   cp               !erg/s/g/K   !  specific heat at constant total pressure
   logS             !   logS             !            !  log10(specific entropy)
   gamma1           !   gamma1           !            !  dlnP_dlnRho at constant S
   gamma3           !   gamma3           !            !  gamma3 - 1 = dlnT_dlnRho at constant S
   theta_e          !   theta_e          !            !  electron degeneracy factor for graboske screening
   gam              !   gam              !            !  plasma interaction parameter (> 160 or so means starting crystallization)
   free_e           !   free_e           !            !  free_e is mean number of free electrons per nucleon
   logfree_e        !   logfree_e        !            !  log10(free_e), free_e is mean number of free electrons per nucleon
   chiRho           !   chiRho           !            !  dlnP_dlnRho at constant T
   chiT             !   chiT             !            !  dlnP_dlnT at constant Rho
   abar             !   abar             !g/mol       !  average atomic weight (g/mole)
   zbar             !   zbar             !C           !  average charge
   z2bar            !   z2bar            !C2          !  average charge^2
   ye               !   ye               !C2          !  average charge per baryon = proton fraction
   opacity          !   opacity          !cm2/g       !  opacity measured at center of zone
   opacity          !   log_opacity      ![cm2/g]     !  log10(opacity)
   eps_nuc          !   eps_nuc          !erg/g/s     !  from nuclear reactions (neutrinos subtracted)
   non_nuc_neu      !   non_nuc_neu      !erg/g/s     !  non-nuclear-reaction neutrino losses
   nonnucneu_plas   !   nonnucneu_plas   !erg/g/s     !  plasmon neutrinos (for collective reactions like gamma_plasmon => nu_e + nubar_e)
   nonnucneu_brem   !   nonnucneu_brem   !erg/g/s     !  bremsstrahlung (for reactions like e- + (z,a) => e- + (z,a) + nu + nubar)
   nonnucneu_phot   !   nonnucneu_phot   !erg/g/s     !  photon neutrinos (for reactions like e- + gamma => e- + nu_e + nubar_e)
   nonnucneu_pair   !   nonnucneu_pair   !erg/g/s     !  pair production (for reactions like e+ + e- => nu_e + nubar_e)
   extra_heat       !   extra_heat       !            !  extra_heat added according to eps_art (see
   logPvisc         !   logPvisc         !            !  log10 artificial viscosity pressure
   eps_grav         !   eps_grav         !erg/g/s     !  heat from gravitational contraction (negative for expansion)
   mlt_mixing_length!   mlt_mixing_length!  cm        !  mixing length for mlt (cm)
   mlt_mixing_type  !   mlt_mixing_type  !            !  value returned by mlt
   gradT_sub_grada  !   gradT_sub_grada  !            !  gradT-grada at cell boundary 
   gradT            !   gradT            !            !  mlt value for required temperature gradient dlnT/dlnP
   gradr            !   gradr            !            !  dlnT/dlnP required for purely radiative transport
   grad_density     !   grad_density     !            !  smoothed dlnRho/dlnP at cell boundary
   gradmu           !   gradmu           !            !  smoothed dlnmu/dlnP at cell boundary (uses mu from eos)
   h1               !   h1               ! n kg       !  Hydrogen fractional abundance
   h2               !   h2               ! n kg       !  Hydrogen fractional abundance
   he3              !   he3              ! n kg       !  Helium3 fractional abundance
   he4              !   he4              ! n kg       !  Helium4 fractional abundance
   li7              !   li7              ! n kg       !  fractional abundance
   c12              !   c12              ! n kg       !  fractional abundance
   c13              !   c13              ! n kg       !  fractional abundance
   n14              !   n14              ! n kg       !  fractional abundance
   n15              !   n15              ! n kg       !  fractional abundance
   o16              !   o16              ! n kg       !  fractional abundance
   o17              !   o17              ! n kg       !  fractional abundances
   o18              !   o18              ! n kg       !  fractional abundance
   ne20             !   ne20             ! n kg       ! number density
   grad_temperature !   grad_temperature !            !  dlnT/dlnP (smoothed)
   pressure_scale_height ! pressure_scale_height !Rsol!  Pressure scale height
   brunt_A          !   brunt_A          !            !  brunt A
   brunt_N2         !   brunt_N2         ! rad2/s2    !  brunt-vaisalaa frequency squared
   brunt_N          !   brunt_N          ! rad/s      !  brunt-vaisalaa frequency
   brunt_frequency  !   brunt_frequency  ! rad/d-1    !  brunt-Vaisalaa frequency
   brunt_N2_dimensionless ! brunt_N2_dimensionless !  !  N2 in units of 3GM/R^3
   brunt_N_dimensionless  ! brunt_N_dimensionless  !  !  N in units of sqrt(3GM/R^3)
   dP_dr            !   dP_dr            ! g/cm2/s2   !  Pressure gradient
   stability_type   !   stability_type   !            !  0 if both sch_stable and ledoux_stable, 1 if neither sch_stable and ledoux_stable, 3 if ledoux_stable but not sch_stable, 4 if sch_stable but not ledoux_stable
   dkap_dlnrho ! dkap_dlnrho_at_face !        ! bla
   dkap_dlnT   ! dkap_dlnt_at_face   !        ! bla
!      

   
!   ! properties at the outermost zone of the model
!      ! log_surface_L
!      ! log_surface_radius
!      ! log_surface_temp
!   ! properties near the center of the model
!      ! log_center_temp
!      ! log_center_density
!      ! log_center_P
!      ! center_eta
!   ! abundances near the center
!      ! center_h1
!      ! center_he3
!      ! center_he4
!      ! center_c12
!      ! center_n14
!      ! center_o16
!      ! center_ne20
!   ! information about total mass
!      ! star_mdot
!      ! star_mass_h1
!      ! star_mass_he3
!      ! star_mass_he4
!      ! star_mass_c12
!      ! star_mass_n14
!      ! star_mass_o16
!      ! star_mass_ne20
!   ! locations of abundance transitions
!      ! h1_boundary_mass
!      ! he4_boundary_mass
!      ! c12_boundary_mass
!   ! location of optical depths 10 and 100
!      ! tau10_mass
!      ! tau10_radius
!      ! tau100_mass
!      ! tau100_radius
!   ! time scales
!      ! kh_timescale
!      ! nuc_timescale
!   ! various kinds of total power
!      ! power_nuc_burn
!      ! power_h_burn
!      ! power_he_burn
!      ! power_neu
!   ! a few control parameter values
!      ! h1_boundary_limit
!      ! he4_boundary_limit
!      ! c12_boundary_limit
!      ! burn_min1
!      ! burn_min2
!
!
!
!
!
!
!
!
!
!   log_D_conv ! D_mix for regions where mix_type = convective_mixing
!   log_D_semi ! D_mix for regions where mix_type = semiconvective_mixing
!   log_D_ovr ! D_mix for regions where mix_type = overshoot_mixing
!   log_D_th ! D_mix for regions where mix_type = thermo_haline_mixing
!
!   log_D_mix ! log10 diffusion coefficient in units of cm^2/second (Eulerian)
!   log_sig_mix ! sig(k) is mixing flow across face k in (gm sec^1)
!   log_conv_vel ! log10 convection velocity (cm/sec)
!   conv_vel_div_csound ! convection velocity divided by sound speed
!   log_mlt_D_mix ! log10 cdc from mlt (cm^2/sec)
!   use_gradr_for_gradT ! if = 1, then zone has been forced radiative in spite of mlt results.
!   mu_alt ! calculated from actual composition assuming complete ionization. mu_alt = abar/(1 + zbar)
!   gradmu_alt ! smoothed dlnmu_alt/dlnP at cell boundary (uses mu from xa assuming complete ionization)
!
!   dlnmu_X ! (at cell boundary) based on hydrogen composition
!   gradmu_X ! smoothed dlnmu_X/dlnP at cell boundary
!
!   gradL ! gradient for Ledoux criterion for convection
!   gradL_composition_term ! = composition term in gradL.  negative means thermohaline instability.
!   sch_stable ! 1 if grada > gradr, 0 otherwise
!   ledoux_stable ! 1 if gradL > gradr, 0 otherwise
!   ! the "for_mixing" values are the ones used to calculate the mixing diffusion coeffs,
!   ! i.e., from the start of the step.  
!   ! the names without "for_mixing" are the values at the end of the step.
!   gradr_for_mixing
!   gradT_for_mixing
!   grada_for_mixing
!   gradL_for_mixing
!   gradL_comp_pre_hydro
!   gradmu_pre_hydro
!   gradmu_alt_pre_hydro
!   gradmu_X_pre_hydro
!   
!   dlnd_dt ! time derivative of log(density) at fixed mass coordinate (Langranian)
!   dlnT_dt ! time derivative of log(temperature) at fixed mass coordinate (Langranian)
!   dv_dt ! time derivative of velocity at fixed mass coordinate (Langranian)
!   accel_div_grav ! dv_dt/grav  --  only if v_flag is true.  0 otherwise.
!   
!   mmid ! mass at midpoint of cell (average of mass coords of the cell boundaries)  Msun units.
!   logM ! log10(m/Msun)
!   xm ! mass exterior to point (Msun units)
!   dq ! mass of zone as a fraction of total star mass
!   logxq ! log10(1-q)
!      
!   ! change in particular abundances during hydro solve
!      !xadot h1
!      !xadot he3
!   ! particular abundances before hydro solve
!      !xaprev h1
!      !xaprev he3
!
!   ! ergs/g/sec for reaction categories
!   
!      add_reaction_categories ! this adds all the reaction categories
!      ! NOTE: you can list specific categories by giving their names (from net_def)
!      
!      pp
!      cno
!      tri_alfa
!
!   ! ergs/g/sec for specific reactions (names from rates_def)
!      
!      rpp
!
!      
!   ! equation residuals
!      
!      equP ! momentum conservation
!      equT ! energy transport
!      equR ! mass-volume-density relation
!      equL ! energy conservation
!      equv ! velocity definition
!      equJ ! angular momentum
!      equ_chem h1
!      equ_chem he4
!       any other isotopes you want
!      
!      
!      
!   ! rotation
!      omega ! angular velocity = j_rot/i_rot
!      log_omega
!      log_j_rot
!      log_J_div_M53 ! J is j*1e-15 integrated from center; M53 is m^(5/3)
!      log_J_inside ! J_inside is j_rot integrated from center
!      !shear ! abs(dlnomega/dlnR)
!      log_abs_shear ! log10(abs(dlnomega/dlnR))
!      domega_dt ! time derivative of omega at fixed mass coordinate (Langranian)
!      delta_omega ! omega minus omega_pre_hydro
!      v_rot ! rotation velocity at cell boundary (km/sec)
!      i_rot ! specific moment of interia at cell boundary
!      j_rot ! specific angular momentum at cell boundary
!      fp_rot ! rotation factor for pressure
!      ft_rot ! rotation factor for temperature
!      log_am_nu ! angular momentum diffusion coef at cell boundary
!         ! this is the rotational viscosity, nu, from Heger 2000 eqn for ang. mom. transport.
!      
!      r_polar ! (Rsun)
!      log_r_polar ! log10 (Rsun)
!      r_equitorial ! (Rsun)
!      log_r_equitorial ! log10 (Rsun)
!      r_e_div_r_p ! r_equitorial/r_polar
!      omega_crit ! breakup angular velocity = sqrt(G M / r_equitorial^3)
!      omega_div_omega_crit
!      
!      am_log_sig
!      
!      am_log_D_DSI ! diffusion coeff for dynamical shear instability      
!      am_log_D_SH ! diffusion coeff for Solberg-Hoiland instability      
!      am_log_D_SSI ! diffusion coeff for secular shear instability
!      am_log_D_ES ! diffusion coeff for Eddington-Sweet circulation
!      am_log_D_GSF ! diffusion coeff for Goldreich-Schubert-Fricke instability
!      am_log_D_ST ! Spruit dynamo mixing diffusivity
!      am_log_nu_ST ! Spruit dynamo effective viscosity
!      
!      dynamo_log_B_r ! (Gauss)
!      dynamo_log_B_phi ! (Gauss)
!
!      
!      ! element diffusion velocity for species
!      edv h1
!      edv he4
!      edv mg24
!      
!   ! misc
!
!      gradr_sub_grada ! gradr - grada; > 0 => Schwarzschild unstable for convection
!      dlnR_dm ! for structure equation
!      dlnP_dm ! for structure equation
!      dlnT_dm ! for structure equation
!      dL_dm ! for structure equation
!      
!      
!      delta_r ! r(outer edge) - r(inner edge); radial extent of cell in cm.
!      delta_v ! v(inner edge) - v(outer edge); rate at which delta_r is shrinking (cm/sec).
!      dt_dv_div_dr ! dt*delta_v/delta_r; need to have this << 1 for every cell
!         
!         
!      cno_div_z ! abundance of c12, n14, and o16 as a fraction of total z
!      
!      dlog_h1_dlogP ! (log(h1(k)) - log(h1(k-1)))/(log(P(k)) - log(P(k-1)))
!      dlog_he3_dlogP
!      dlog_he4_dlogP
!      dlog_c12_dlogP
!      dlog_c13_dlogP
!      dlog_n14_dlogP
!      dlog_o16_dlogP
!      dlog_ne20_dlogP
!      dlog_mg24_dlogP
!      dlog_si28_dlogP
!      
!      dlog_pp_dlogP
!      dlog_cno_dlogP
!      dlog_3alf_dlogP
!      
!      dlog_burn_c_dlogP
!      dlog_burn_n_dlogP
!      dlog_burn_o_dlogP
!      
!      dlog_burn_ne_dlogP
!      dlog_burn_na_dlogP
!      dlog_burn_mg_dlogP
!      
!      dlog_cc_dlogP
!      dlog_co_dlogP
!      dlog_oo_dlogP
!      
!      dlog_burn_si_dlogP
!      dlog_burn_s_dlogP
!      dlog_burn_ar_dlogP
!      dlog_burn_ca_dlogP
!      dlog_burn_ti_dlogP
!      dlog_burn_cr_dlogP
!      dlog_burn_fe_dlogP
!      
!      dlog_pnhe4_dlogP
!      dlog_photo_dlogP
!      dlog_other_dlogP
!      
!      gradmu ! dlnmu/dlnP (smoothed)
!      grad_density ! dlnRho/dlnP (smoothed)
!      log_brunt_N ! log10(brunt_N)
!      log_brunt_N2 ! log10(brunt_N2)
!      sign_brunt_N2 ! sign of brunt_N2 (+1 for Ledoux stable; -1 for Ledoux unstable)
!      lamb_S ! for l=1: S = sqrt(2)*csound/r
!      brunt_dlnRho_dlnR ! smoothed numerical difference for use with brunt
!      
!      brunt_dlnY_dlnP ! smoothed numerical difference
!      brunt_chiY ! estimated at cell center
!      brunt_B ! smoothed numerical difference